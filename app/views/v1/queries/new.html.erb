

    <% @results =  Rails.application.config.my_config["array"] %>

<div class="page-wrap">
<div class = "row">
  <div class = "col-md-3">
    <div style="margin-left:17px">
   <h2> Create new query</h2>
   <br>
   <%= form_for @user do |f| %>
      <%= fields_for @query do |query_fields| %>
        <% query_fields.label :time_to_autocomplete %>
        <%= query_fields.text_field :content, :placeholder => "e.g. Staples" %>
      <% end %>
      <br><br>
      <%= f.submit "Create New PorkCast!", :class => 'animation-while-load'  %>
    <% end %>
    </div>
  </div>
  <div class = "col-md-3">
    <br>
    <div class="helper-wrapper">
      <div style="text-decoration:underline;text-align:center;color:white;"><b>SEARCH HELPER</b></div>
      <div class="match-big" style="text-align:center; width: 250px; margin-right:300px;"></div>
    </div>
  </div>
     <div class="col-md-6">
      <div style="margin-right:23px;">
        <h1 style="text-align:center">The Search Helper</h1><br>
        <h4 style="text-align: center;"><strong>Making Your Matches Work Better</strong></h4>
              <p>For the best PorkCasting experience, you want to try to match the entity/person name as close to the State record as you can. <strong>Search Helper</strong> helps make that possible.</p>
              <p>You simply:</p>
              <p><strong>1.</strong> Start to type in some letters.</p>
              <p><strong>2.</strong> See the query you want in the <strong>Search Helper</strong></p>
              <p><strong>3.</strong> Click the matching query inside the helper</p>
              <p>The program will then copy paste the text into your field.</p>
              <p>Once it is showing in your own text field, just click 'Create New PorkCast!' and you are set!</p>
      </div>
   </div>
</div>

</div>

<%= javascript_tag do %>
  $("body .animation-while-load").click(function(){
    $(".page-wrap").append("<div class='load-animation'><img src='/assets/ajax-loader-b98f0466a81ba5642c9bafbc00964f0e559945a4ec996a165d2179d03bd5e8ca.gif' alt='Ajax loader b98f0466a81ba5642c9bafbc00964f0e559945a4ec996a165d2179d03bd5e8ca' /></div>");
    console.log("click!");
  });

  $(window).keyup(function() {
    $(".match-big").html("");
    var myData = $("#query_content").val();
    $.ajax( {
      url: "http://www.porkcast.com/tags.json",
      data: { value: myData },
      type: "GET",
      dataType : "json",
      success: function( json ) {
        if($("#query_content").val().length > 2) {
        var myIterator = 1;
          json.forEach(function(tag){
            if(myIterator < 11){
              $(".match-big").append("<div class=" + "'possible-match'" + ">" + tag + "</div>");
              myIterator++;
              console.log(myIterator);
            }
          });
          $("body .possible-match").click(function(){
            $this = this;
            console.log($this.textContent);
            $("#query_content").val($this.textContent);
            console.log("click!");
          });
        }
       },
      error: function( xhr, status, errorThrown ) { console.log("error!"); },
      complete: function( xhr, status ) { console.log("complete!"); }
    });
  });


<% end %>